{
    "metadata" : {
		"pid" : {
            "friendly_name" : "PID Standard",
            "module_name" : "pid",
            "image" : "pid.png",
            "description" : "The standard PID controller for PiFire, used by default. This software was originally developed by GitHub user DBorello as part of his excellent PiSmoker project.  Slightly modified by @weberbox and adapted for PiFire. ",
            "author" : "Dan Borello",
            "link" : "https://github.com/DBorello/PiSmoker", 
            "contributors" : ["Ben Parmeter", "James Weber"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 0.9
                }   
            },
            "config" : [
                {
                    "option_name" : "PB",
                    "option_friendly_name" : "Proportional Band(PB)", 
                    "option_description" : "This is the temperature band centered around the set point, that the controller is active.  If the error is less than PB/2, the command is 1.0. Higher PB's decrease controller response to error. [Default=60.0]",
                    "option_type" : "float",
                    "option_default" : 60.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Td",
                    "option_friendly_name" : "Derivative Time (Td)", 
                    "option_description" : "Time (in seconds) to predict the future value. Higher Td makes the controller more responsive to the Error Rate of Change. [Default=45.0]",
                    "option_type" : "float",
                    "option_default" : 45.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.1,  
                    "hidden" : false
                },
                {
                    "option_name" : "Ti",
                    "option_friendly_name" : "Integral Time (Ti)", 
                    "option_description" : "Time (in seconds) to eliminate the integral error. Higher Ti makes the controller less responsive to accumulated error over time. [Default=180.0]",
                    "option_type" : "float",
                    "option_default" : 180.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "center",
                    "option_friendly_name" : "Center Ratio", 
                    "option_description" : "Center of Cycle Ratio, which is specific to the way this PID will behave. Higher Centers increase system response at high set points. Lower Centers increase system stability at low set points but may keep the system from reaching high set points.  [Default=0.5]",
                    "option_type" : "float",
                    "option_default" : 0.5,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.01, 
                    "hidden" : false
                }
            ]
        },
		"pid_ac" : {
            "friendly_name" : "PID Auto Center",
            "module_name" : "pid_ac",
            "image" : "pid.png",
            "description" : "The standard PID controller for PiFire, modified to include Auto Center calculations and Overshoot reduction code. This software was originally developed by GitHub user DBorello as part of his excellent PiSmoker project.  Slightly modified by @weberbox and @dogtreatfairy and adapted for PiFire. ",
            "author" : "Dan Borello",
            "link" : "https://github.com/DBorello/PiSmoker", 
            "contributors" : ["Ben Parmeter", "James Weber", "Ryan Steel"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 15,
                    "cycle_ratio_min" : 0.05,
                    "cycle_ratio_max" : 0.9
                }   
            },
            "config" : [
                {
                    "option_name" : "PB",
                    "option_friendly_name" : "Proportional Band(PB)", 
                    "option_description" : "This is the temperature band centered around the set point, that the controller is active.  If the error is less than PB/2, the command is 1.0. Higher PB's decrease controller response to error. [Default=60.0]",
                    "option_type" : "float",
                    "option_default" : 60.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Td",
                    "option_friendly_name" : "Derivative Time (Td)", 
                    "option_description" : "Time (in seconds) to predict the future value. Higher Td makes the controller more responsive to the Error Rate of Change. [Default=45.0]",
                    "option_type" : "float",
                    "option_default" : 45.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.1,  
                    "hidden" : false
                },
                {
                    "option_name" : "Ti",
                    "option_friendly_name" : "Integral Time (Ti)", 
                    "option_description" : "Time (in seconds) to eliminate the integral error. Higher Ti makes the controller less responsive to accumulated error over time. [Default=180.0]",
                    "option_type" : "float",
                    "option_default" : 180.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
				{
                    "option_name" : "stable_window",
                    "option_friendly_name" : "Stable Window (Degrees)", 
                    "option_description" : "Window +/- from Set Point for triggering Overshoot condition. When in Overshoot, Output is set to min. [Default=12]",
                    "option_type" : "float",
                    "option_default" : 12,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 1,
                    "hidden" : false
                },
				{
                    "option_name" : "center_factor",
                    "option_friendly_name" : "Center Factor", 
                    "option_description" : "Center Factor multiplied by Set Point. Higher Center Factors increase system response at high set points. Lower Center Factors increase system stability at low set points but may keep the system from reaching high set points. Controller accounts for F to C conversion. EX: At 240F(115C) center is 240 * 0.0012 = 0.288. [Default=0.0010]",
                    "option_type" : "float",
                    "option_default" : 0.0010,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.0001,
                    "hidden" : false
                }
            ]
        },
		"pid_sp" : {
            "friendly_name" : "PID Smith Predictor",
            "module_name" : "pid_sp",
            "image" : "pid_sp.png",
            "description" : "The Auto Center PID controller for PiFire, modified to include a Smith Predictor. This software was originally developed by GitHub user DBorello as part of his excellent PiSmoker project.  Slightly modified by @weberbox and @dogtreatfairy and adapted for PiFire. ",
            "author" : "Dan Borello",
            "link" : "https://github.com/DBorello/PiSmoker", 
            "contributors" : ["Ben Parmeter", "James Weber", "Ryan Steel"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 15,
                    "cycle_ratio_min" : 0.05,
                    "cycle_ratio_max" : 0.9
                }   
            },
            "config" : [
                {
                    "option_name" : "PB",
                    "option_friendly_name" : "Proportional Band(PB)", 
                    "option_description" : "This is the temperature band centered around the set point, that the controller is active.  If the error is less than PB/2, the command is 1.0. Higher PB's decrease controller response to error. [Default=60.0]",
                    "option_type" : "float",
                    "option_default" : 60.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Td",
                    "option_friendly_name" : "Derivative Time (Td)", 
                    "option_description" : "Time (in seconds) to predict the future value. Higher Td makes the controller more responsive to the Error Rate of Change. [Default=45.0]",
                    "option_type" : "float",
                    "option_default" : 45.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.1,  
                    "hidden" : false
                },
                {
                    "option_name" : "Ti",
                    "option_friendly_name" : "Integral Time (Ti)", 
                    "option_description" : "Time (in seconds) to eliminate the integral error. Higher Ti makes the controller less responsive to accumulated error over time. [Default=180.0]",
                    "option_type" : "float",
                    "option_default" : 180.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
				{
                    "option_name" : "stable_window",
                    "option_friendly_name" : "Stable Window (Degrees)", 
                    "option_description" : "Window +/- from Set Point for triggering Overshoot condition. When in Overshoot, Output is set to min. [Default=12]",
                    "option_type" : "float",
                    "option_default" : 12,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 1,
                    "hidden" : false
                },
				{
                    "option_name" : "center_factor",
                    "option_friendly_name" : "Center Factor", 
                    "option_description" : "Center Factor multiplied by Set Point. Higher Center Factors increase system response at high set points. Lower Center Factors increase system stability at low set points but may keep the system from reaching high set points. Controller accounts for F to C conversion. EX: At 240F(115C) center is 240 * 0.0012 = 0.288. [Default=0.0010]",
                    "option_type" : "float",
                    "option_default" : 0.0010,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.0001,
                    "hidden" : false
                },
				{
                    "option_name" : "tau",
                    "option_friendly_name" : "Tau (s)", 
					"option_description" : "Time constant for the Smith Predictor. This is the time it takes the system to reach 2/3 of it's final value after a Set Point change. Higher Tau decreases system sensitivity to model mismatch. [Default=115]",
                    "option_type" : "float",
                    "option_default" : 115,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 1,
                    "hidden" : false
                },
				{
					"option_name": "theta",
					"option_friendly_name" : "Theta (s)", 
					"option_description" : "Time delay in the system. Theta is measured after commanding a Set Point change as the time it takes from the initial commmand to seeing initial temperature rise. Higher Theta makes the system more sensitive to delays in the system. [Default=65]",
 					"option_type" : "float",
  					"option_default" : 65,
   					"option_min" : null,
    				"option_max" : null, 
     				"option_step" : 1,
      				"hidden" : false
                }
            ]
        },
		"pid_clamping" : {
            "friendly_name" : "PID w/ Integrator Clamping",
            "module_name" : "pid_clamping",
            "image" : "pid.png",
            "description" : "The original PiFire PID modified to both calculate the derivative portion in the classic de/dt method instead of the dT/dt method and with integral anti-windup protection achieved with a clamping method.",
            "author" : "Mark Alston",
            "link" : "https://github.com/markalston/PiFire", 
            "contributors" : ["Ben Parmeter", "James Weber", "Mark Alston"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 10,
                    "cycle_ratio_min" : 0.05,
                    "cycle_ratio_max" : 0.99
                }
            },
            "config" : [
                {
                    "option_name" : "PB",
                    "option_friendly_name" : "Proportional Band(PB)", 
                    "option_description" : "The proportional band is the total range of the controlled output that can be produced within the controller’s 0% and 100% limits. Within the PB the command output is between 1.0 and 0.  Outside the band the command output is 1 or -1 (fully on or off). Increase this if you are overshooting setpoint. [Default=30.0]",
                    "option_type" : "float",
                    "option_default" : 30.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Ti",
                    "option_friendly_name" : "Integral Time Constant (Ti)", 
                    "option_description" : "Time constant that determines how quickly we respond to accumulated error. Higher Ti makes the controller less responsive to accumulated error over time. Lower this if you cannot reach setpoint. [Default=120.0]",
                    "option_type" : "float",
                    "option_default" : 120.0,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Td",
                    "option_friendly_name" : "Derivative Time Constant (Td)", 
                    "option_description" : "Time constant that determines how quickly the system reponds to changes in error rate. Higher Td makes the controller more responsive to the Error Rate of Change. Td basically acts as a damper on the system. Be cautious with this setting and start low and increase slowly. It might not even be needed and can easily drive a system into instability. [Default=20.0]",
                    "option_type" : "float",
                    "option_default" : 20.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.1,  
                    "hidden" : false
                }

            ]
        },
		"pid_parallel" : {
            "friendly_name" : "Parallel PID w/ Integrator Clamping",
            "module_name" : "pid_parallel",
            "image" : "pid.png",
            "description" : "PID in parallel form with integral anti-windup protection achieved with a clamping method. This controller should only be used if you understand PID systems and wish to play around or have some specific need. This PID method might also be useful if you are following tuning guides such as Ziegler–Nichols. However, the coefficients have less relationship to physical behaviors and is more usefull for theoretical testing of the pid system.",
            "author" : "Mark Alston",
            "link" : "https://github.com/markalston/PiFire", 
            "contributors" : ["Ben Parmeter", "James Weber", "Mark Alston"],
            "attributions" : [],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 10,
                    "cycle_ratio_min" : 0.05,
                    "cycle_ratio_max" : 0.99
                }
            },
            "config" : [
                {
                    "option_name" : "Kp",
                    "option_friendly_name" : "Proportional Gain", 
                    "option_description" : "The proportional Gain. Kp = 1/PB. [Default=30.0]",
                    "option_type" : "float",
                    "option_default" : 30,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.1,
                    "hidden" : false
                },
                {
                    "option_name" : "Ki",
                    "option_friendly_name" : "Integral Gain", 
                    "option_description" : "Lower Ki makes the controller less responsive to accumulated error over time. Ki = Kp/Ti or 1/(PB*Ti).  Increase this if you cannot reach setpoint. [Default=1.5]",
                    "option_type" : "float",
                    "option_default" : 1.5,
                    "option_min" : null,
                    "option_max" : null, 
                    "option_step" : 0.01,
                    "hidden" : false
                },
                {
                    "option_name" : "Kd",
                    "option_friendly_name" : "Derivative Gain", 
                    "option_description" : "Kd basically acts as a damper on the system. Kd = Kp*Td or Kd = Td/PB. Be cautious with this setting and start low and increase slowly. It might not even be needed and can easily drive a system into instability. [Default=4.0]",
                    "option_type" : "float",
                    "option_default" : 4.0,
                    "option_min" : null,
                    "option_max" : null,
                    "option_step" : 0.01,  
                    "hidden" : false
                },
                {
                    "option_name" : "Clamping",
                    "option_friendly_name" : "Integral Windup Protection", 
                    "option_description" : "Stops integration when the sum of the block components exceeds the output limits and the integrator output and block input have the same sign. Resumes integration when either the sum of the block components exceeds the output limits and the integrator output and block input have opposite sign or the sum no longer exceeds the output limits. [Default=True]",
                    "option_type" : "boolean",
                    "option_default" : true,
                    "hidden" : false
                
                }
            ]
        },
        "fuzzy" : {
            "friendly_name" : "Fuzzy Logic Controller",
            "module_name" : "fuzzy",
            "image" : "fuzzy.png",
            "description" : "**EXPERIMENTAL** Use of this controller is at your own risk.  This is an attempt at designing a fuzzy logic controller for set temperature control.  It is currently using Scikit Fuzzy's Python Module to implement a relatively straightforward fuzzy logic controller.  This controller should be considered pre-Alpha and extremely experimental.  This module will store the fuzzy logic controller in an object, which is saved/pickled in the controller directory, named 'fuzzy.pickle'.  If any changes are made to the default fuzzy logic controller settings, then this pickle file should be deleted so that a new object can be created with new settings.  Note that it may take a very long time for the object to be generated on the Raspberry Pi due to the limited performance capabilities of that processor.",
            "author" : "Ben Parmeter",
            "link" : "https://nebhead.github.io/PiFire", 
            "contributors" : [],
            "attributions" : ["Sci-Kit Fuzzy"],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 1.0
                }   
            },
            "config" : []
        }, 
        "ml" : {
            "friendly_name" : "Machine Learning Controller",
            "module_name" : "ml",
            "image" : "",
            "description" : "**EXPERIMENTAL** This controller is NOT recommended for use at this time.  This is an attempt at designing a machine learning based controller for set temperature control.  It is currently using Scikit Learn Python Module to implement a relatively straightforward machine learning controller.  This controller should be considered pre-Alpha and extremely experimental.  This module will store the machine learning controller in an object, which is saved in the controller directory, named 'ml_model.joblib'.  If any changes are made to the default controller settings, then this joblib file should be deleted so that a new object can be created with new settings.  Note that it may take a very long time for the object to be generated on the Raspberry Pi due to the limited performance capabilities of that processor.",
            "author" : "Ben Parmeter",
            "link" : "https://nebhead.github.io/PiFire", 
            "contributors" : [],
            "attributions" : ["Sci-Kit Learn"],
            "recommendations" : {
                "cycle" : { 
                    "cycle_time" : 25,
                    "cycle_ratio_min" : 0.1,
                    "cycle_ratio_max" : 1.0
                }   
            },
            "config" : []
        }
    }
}
