{
	"modules" : {
		"grillplatform" : {
			"custom" : {
				"friendly_name" : "Custom Build",
				"filename" : "raspberry_pi_all",
				"description" : "Choose this configuration if you have a custom configuration and need to modify all available platform settings.",
				"default" : false,
				"image" : "custom.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-hardware-pwm"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-pwm", "-ow", "-bl", "-s", "-i"]],
				"settings_dependencies" : {
					"current" : {
						"friendly_name" : "Platform Selected",
						"description" : "Selects the current platform.",
						"options" : { "custom" : "Custom Build" },
						"settings" : ["platform", "current"],
						"hidden" : true
					},
					"system_type" : {
						"friendly_name" : "System Type",
						"description" : "Select the system that you will be using.  By default on most platforms will be the Raspberry Pi.  Select Prototype only if you are doing development testing.",
						"options" : { "raspberry_pi_all" : "Raspberry Pi (ALL)", "prototype" : "Prototype / Test Only" },
						"settings" : ["platform", "system_type"]
					},
					"standalone" : {
						"friendly_name" : "Standalone",
						"description" : "Select if your are using PiFire alongside the OEM Controller. ",
						"options" : { "True" : "PiFire Only", "False" : "OEM Controller Present" },
						"settings" : ["platform", "standalone"]
					},
					"triggerlevel" : {
						"friendly_name" : "Relay Type",
						"description" : "Select the trigger level for the relays on the platform.  ",
						"options" : { "LOW" : "Active Low", "HIGH" : "Active High" },
						"settings" : ["platform", "triggerlevel"]
					},
					"dc_fan" : {
						"friendly_name" : "Fan Type",
						"description" : "Select if your platform supports a DC(PWM) fan or uses a regular AC Fan. ",
						"options" : { "True" : "DC Fan (PWM)", "False" : "AC Fan" },
						"settings" : ["platform", "dc_fan"]
					},
					"output_auger" : {
						"friendly_name" : "Auger Relay GPIO Pin",
						"description" : "Select the GPIO used for the Auger relay.",
						"options" : { "14" : "GPIO14", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "auger"]
					},
					"output_dc_fan" : {
						"friendly_name" : "DC Fan GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan.",
						"options" : { "26" : "GPIO26", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "dc_fan"]
					},
					"output_fan" : {
						"friendly_name" : "AC Fan Relay GPIO Pin",
						"description" : "Select the GPIO used for enabling/disabling fan.",
						"options" : { "15" : "GPIO15", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "fan"]
					},
					"output_igniter" : {
						"friendly_name" : "Igniter Relay GPIO Pin",
						"description" : "Select the GPIO used for the Igniter relay.",
						"options" : { "18" : "GPIO18", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "igniter"]
					},
					"output_power" : {
						"friendly_name" : "Power Gate Relay GPIO Pin",
						"description" : "Select the GPIO used for the AC Power Gate.",
						"options" : { "4" : "GPIO4", "2" : "GPIO2", "3" : "GPIO3", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "power"]
					},
					"output_pwm" : {
						"friendly_name" : "DC Fan PWM GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan PWM.  Note that this should be a PWM capable GPIO.",
						"options" : { "13" : "GPIO13", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "outputs", "pwm"]
					},
					"input_selector" : {
						"friendly_name" : "Controller Select GPIO Pin",
						"description" : "If the OEM controller is present alongside the PiFire controller, this GPIO will be used to select the active controller. Note that this will not be utilized unless 'Standalone' is set to False.  This should be set to 'None' if not utilized.",
						"options" : { "None" : "None", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "inputs", "selector"]
					},
					"input_shutdown" : {
						"friendly_name" : "System Shutdown GPIO Pin",
						"description" : "GPIO Pin configured to shutdown the system.  Used for the wake/shutdown button on some designs.  Set this to 'None' if not utilized.",
						"options" : { "None" : "None", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "inputs", "shutdown"]
					},
					"device_display_dc" : {
						"friendly_name" : "SPI Display DC Pin",
						"description" : "GPIO Pin for the SPI Display DC Pin.",
						"options" : { "24" : "GPIO24", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "display", "dc"]
					},
					"device_display_led" : {
						"friendly_name" : "SPI Display LED Backlight Pin",
						"description" : "GPIO Pin for the SPI Display LED Backlight.",
						"options" : { "5" : "GPIO5", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" }, 
						"settings" : ["platform", "devices", "display", "led"]
					},
					"device_display_rst" : {
						"friendly_name" : "SPI Display Reset Pin",
						"description" : "GPIO Pin for the SPI Display Reset.",
						"options" : { "25" : "GPIO25", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "display", "rst"]
					},
					"device_distance_echo" : {
						"friendly_name" : "Distance Sensor ECHO GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor ECHO",
						"options" : { "27" : "GPIO27", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26" },
						"settings" : ["platform", "devices", "distance", "echo"]
					},
					"device_distance_trig" : {
						"friendly_name" : "Distance Sensor Trigger GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor Trigger",
						"options" : { "23" : "GPIO23", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "distance", "trig"]
					},
					"device_input_down_dt" : {
						"friendly_name" : "Down Button / Encoder DT",
						"description" : "GPIO Pin for Down Button / Encoder DT",
						"options" : { "20" : "GPIO20", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "down_dt"]
					},
					"device_input_enter_sw" : {
						"friendly_name" : "Enter Button / Encoder SW",
						"description" : "GPIO Pin for Enter Button / Encoder SW",
						"options" : { "21" : "GPIO21", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "16" : "GPIO16", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "enter_sw"]
					},
					"device_input_up_clk" : {
						"friendly_name" : "Up Button / Encoder CLK",
						"description" : "GPIO Pin for Up Button / Encoder CLK",
						"options" : { "16" : "GPIO16", "2" : "GPIO2", "3" : "GPIO3", "4" : "GPIO4", "5" : "GPIO5", "6" : "GPIO6", "7" : "GPIO7", "8" : "GPIO8", "9" : "GPIO9", "10" : "GPIO10", "11" : "GPIO11", "12" : "GPIO12", "13" : "GPIO13", "14" : "GPIO14", "15" : "GPIO15", "17" : "GPIO17", "18" : "GPIO18", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "24" : "GPIO24", "25" : "GPIO25", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "up_clk"]
					},
					"system_1wire" : {
						"friendly_name" : "1Wire GPIO Pin",
						"description" : "GPIO Pin for 1Wire bus/interface.  Used for DS18B20 sensors.",
						"options" : { "None" : "None", "4" : "GPIO4", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "system", "1WIRE"]
					},
					"real_hw" : {
						"friendly_name" : "Real Hardware",
						"description" : "Select Yes if running on real hardware (Default).  Select No if running in a test environment.",
						"options" : { "True" : "Yes", "False" : "No (Test Only)" },
						"settings" : ["platform", "real_hw"]
					}					
				}
			},
			"pcb_2.00a" : {
				"friendly_name" : "PiFire PCB v2.00a",
				"filename" : "raspberry_pi_all",
				"description" : "Default settings/configuration for the PiFire PCB v2.00a designed by Ben Parmeter.",
				"default" : false,
				"image" : "pcb_2.00a.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-hardware-pwm"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-ow", "-s", "-i"]],
				"settings_dependencies" : {
					"current" : {
						"friendly_name" : "Platform Selected",
						"description" : "Selects the current platform.",
						"options" : { "pcb_2.00a" : "PiFire PCB v2.00a" },
						"settings" : ["platform", "current"],
						"hidden" : true
					},
					"system_type" : {
						"friendly_name" : "System Type",
						"description" : "Select the system that you will be using.  By default on most platforms will be the Raspberry Pi.  Select Prototype only if you are doing development testing.",
						"options" : { "raspberry_pi_all" : "Raspberry Pi (ALL)", "prototype" : "Prototype / Test Only" },
						"settings" : ["platform", "system_type"]
					},
					"standalone" : {
						"friendly_name" : "Standalone",
						"description" : "Select if your are using PiFire alongside the OEM Controller. ",
						"options" : { "True" : "PiFire Only", "False" : "OEM Controller Present" },
						"settings" : ["platform", "standalone"]
					},
					"triggerlevel" : {
						"friendly_name" : "Relay Type",
						"description" : "Select the trigger level for the relays on the platform.  ",
						"options" : { "LOW" : "Active Low", "HIGH" : "Active High" },
						"settings" : ["platform", "triggerlevel"]
					},
					"dc_fan" : {
						"friendly_name" : "Fan Type",
						"description" : "Select if your platform supports a DC(PWM) fan or uses a regular AC Fan. ",
						"options" : { "False" : "AC Fan" },
						"settings" : ["platform", "dc_fan"],
						"hidden" : true
					},
					"output_auger" : {
						"friendly_name" : "Auger Relay GPIO Pin",
						"description" : "Select the GPIO used for the Auger relay.",
						"options" : { "14" : "GPIO14" },
						"settings" : ["platform", "outputs", "auger"],
						"hidden" : true
					},
					"output_dc_fan" : {
						"friendly_name" : "DC Fan GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan.",
						"options" : { "None" : "None" },  
						"settings" : ["platform", "outputs", "dc_fan"],
						"hidden" : true
					},
					"output_fan" : {
						"friendly_name" : "AC Fan Relay GPIO Pin",
						"description" : "Select the GPIO used for enabling/disabling fan.",
						"options" : { "15" : "GPIO15" },						"settings" : ["platform", "outputs", "fan"],
						"hidden" : true
					},
					"output_igniter" : {
						"friendly_name" : "Igniter Relay GPIO Pin",
						"description" : "Select the GPIO used for the Igniter relay.",
						"options" : { "18" : "GPIO18" },
						"settings" : ["platform", "outputs", "igniter"],
						"hidden" : true
					},
					"output_power" : {
						"friendly_name" : "Power Gate Relay GPIO Pin",
						"description" : "Select the GPIO used for the AC Power Gate.",
						"options" : { "4" : "GPIO4" },
						"settings" : ["platform", "outputs", "power"],
						"hidden" : true
					},
					"output_pwm" : {
						"friendly_name" : "DC Fan PWM GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan PWM.  Note that this should be a PWM capable GPIO.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "outputs", "pwm"],
						"hidden" : true
					},
					"input_selector" : {
						"friendly_name" : "Controller Select GPIO Pin",
						"description" : "If the OEM controller is present alongside the PiFire controller, this GPIO will be used to select the active controller. Note that this will not be utilized unless 'Standalone' is set to False.  This should be set to 'None' if not utilized.",
						"options" : { "17" : "GPIO17" },
						"settings" : ["platform", "inputs", "selector"],
						"hidden" : true
					},
					"input_shutdown" : {
						"friendly_name" : "System Shutdown GPIO Pin",
						"description" : "GPIO Pin configured to shutdown the system.  Used for the wake/shutdown button on some designs.  Set this to 'None' if not utilized.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "inputs", "shutdown"],
						"hidden" : true
					},
					"device_display_dc" : {
						"friendly_name" : "SPI Display DC Pin",
						"description" : "GPIO Pin for the SPI Display DC Pin.",
						"options" : { "24" : "GPIO24" },
						"settings" : ["platform", "devices", "display", "dc"],
						"hidden" : true
					},
					"device_display_led" : {
						"friendly_name" : "SPI Display LED Backlight Pin",
						"description" : "GPIO Pin for the SPI Display LED Backlight.",
						"options" : { "5" : "GPIO5" },
						"settings" : ["platform", "devices", "display", "led"],
						"hidden" : true
					},
					"device_display_rst" : {
						"friendly_name" : "SPI Display Reset Pin",
						"description" : "GPIO Pin for the SPI Display Reset.",
						"options" : { "25" : "GPIO25" },
						"settings" : ["platform", "devices", "display", "rst"],
						"hidden" : true
					},
					"device_distance_echo" : {
						"friendly_name" : "Distance Sensor ECHO GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor ECHO",
						"options" : {"27" : "GPIO27", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26" },
						"settings" : ["platform", "devices", "distance", "echo"]
					},
					"device_distance_trig" : {
						"friendly_name" : "Distance Sensor Trigger GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor Trigger",
						"options" : { "23" : "GPIO23", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "distance", "trig"]
					},
					"device_input_down_dt" : {
						"friendly_name" : "Down Button / Encoder DT",
						"description" : "GPIO Pin for Down Button / Encoder DT",
						"options" : { "20" : "GPIO20", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "down_dt"]
					},
					"device_input_enter_sw" : {
						"friendly_name" : "Enter Button / Encoder SW",
						"description" : "GPIO Pin for Enter Button / Encoder SW",
						"options" : { "21" : "GPIO21", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "20" : "GPIO20", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "enter_sw"]
					},
					"device_input_up_clk" : {
						"friendly_name" : "Up Button / Encoder CLK",
						"description" : "GPIO Pin for Up Button / Encoder CLK",
						"options" : { "16" : "GPIO16", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "devices", "input", "up_clk"]
					},
					"system_1wire" : {
						"friendly_name" : "1Wire GPIO Pin",
						"description" : "GPIO Pin for 1Wire bus/interface.  Used for DS18B20 sensors.",
						"options" : { "None" : "None", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "16": "GPIO16", "19" : "GPIO19", "20" : "GPIO20", "21" : "GPIO21", "22" : "GPIO22", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "system", "1WIRE"]
					},
					"system_spi0_ce0" : {
						"friendly_name" : "SPI0 CE0 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS0.",
						"options" : { "8" : "GPIO8"},
						"settings" : ["platform", "system", "SPI0", "CE0"],
						"hidden" : true
					},
					"system_spi0_ce1" : {
						"friendly_name" : "SPI0 CE1 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS1.",
						"options" : { "7" : "GPIO7"},
						"settings" : ["platform", "system", "SPI0", "CE1"],
						"hidden" : true
					},
					"real_hw" : {
						"friendly_name" : "Real Hardware",
						"description" : "Select Yes if running on real hardware (Default).  Select No if running in a test environment.",
						"options" : { "True" : "Yes", "False" : "No (Test Only)" },
						"settings" : ["platform", "real_hw"]
					}					
				}
			},
			"pcb_3.01a" : {
				"friendly_name" : "PiFire PCB v3.01a",
				"filename" : "raspberry_pi_all",
				"description" : "Default settings/configuration for the PiFire PCB v3.01a designed by James Weber.",
				"default" : true,
				"image" : "pcb_3.01a.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-hardware-pwm"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-ow", "-s", "-i"]],
				"settings_dependencies" : {
					"current" : {
						"friendly_name" : "Platform Selected",
						"description" : "Selects the current platform.",
						"options" : { "pcb_3.01a" : "PiFire PCB v3.01a" },
						"settings" : ["platform", "current"],
						"hidden" : true
					},
					"system_type" : {
						"friendly_name" : "System Type",
						"description" : "Select the system that you will be using.  By default on most platforms will be the Raspberry Pi.  Select Prototype only if you are doing development testing.",
						"options" : { "raspberry_pi_all" : "Raspberry Pi (ALL)", "prototype" : "Prototype / Test Only" },
						"settings" : ["platform", "system_type"]
					},
					"standalone" : {
						"friendly_name" : "Standalone",
						"description" : "Select if your are using PiFire alongside the OEM Controller. ",
						"options" : { "True" : "PiFire Only", "False" : "OEM Controller Present" },
						"settings" : ["platform", "standalone"]
					},
					"triggerlevel" : {
						"friendly_name" : "Relay Type",
						"description" : "Select the trigger level for the relays on the platform.  ",
						"options" : { "LOW" : "Active Low", "HIGH" : "Active High" },
						"settings" : ["platform", "triggerlevel"]
					},
					"dc_fan" : {
						"friendly_name" : "Fan Type",
						"description" : "Select if your platform supports a DC(PWM) fan or uses a regular AC Fan. ",
						"options" : { "False" : "AC Fan" },
						"settings" : ["platform", "dc_fan"],
						"hidden" : true
					},
					"output_auger" : {
						"friendly_name" : "Auger Relay GPIO Pin",
						"description" : "Select the GPIO used for the Auger relay.",
						"options" : { "14" : "GPIO14" },
						"settings" : ["platform", "outputs", "auger"],
						"hidden" : true
					},
					"output_dc_fan" : {
						"friendly_name" : "DC Fan GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan.",
						"options" : { "None" : "None" },  
						"settings" : ["platform", "outputs", "dc_fan"],
						"hidden" : true
					},
					"output_fan" : {
						"friendly_name" : "AC Fan Relay GPIO Pin",
						"description" : "Select the GPIO used for enabling/disabling fan.",
						"options" : { "15" : "GPIO15" },						
						"settings" : ["platform", "outputs", "fan"],
						"hidden" : true
					},
					"output_igniter" : {
						"friendly_name" : "Igniter Relay GPIO Pin",
						"description" : "Select the GPIO used for the Igniter relay.",
						"options" : { "18" : "GPIO18" },
						"settings" : ["platform", "outputs", "igniter"],
						"hidden" : true
					},
					"output_power" : {
						"friendly_name" : "Power Gate Relay GPIO Pin",
						"description" : "Select the GPIO used for the AC Power Gate.",
						"options" : { "4" : "GPIO4" },
						"settings" : ["platform", "outputs", "power"],
						"hidden" : true
					},
					"output_pwm" : {
						"friendly_name" : "DC Fan PWM GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan PWM.  Note that this should be a PWM capable GPIO.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "outputs", "pwm"],
						"hidden" : true
					},
					"input_selector" : {
						"friendly_name" : "Controller Select GPIO Pin",
						"description" : "If the OEM controller is present alongside the PiFire controller, this GPIO will be used to select the active controller. Note that this will not be utilized unless 'Standalone' is set to False.  This should be set to 'None' if not utilized.",
						"options" : { "17" : "GPIO17" },
						"settings" : ["platform", "inputs", "selector"],
						"hidden" : true
					},
					"input_shutdown" : {
						"friendly_name" : "System Shutdown GPIO Pin",
						"description" : "GPIO Pin configured to shutdown the system.  Used for the wake/shutdown button on some designs.  Set this to 'None' if not utilized.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "inputs", "shutdown"],
						"hidden" : true
					},
					"device_display_dc" : {
						"friendly_name" : "SPI Display DC Pin",
						"description" : "GPIO Pin for the SPI Display DC Pin.",
						"options" : { "24" : "GPIO24" },
						"settings" : ["platform", "devices", "display", "dc"],
						"hidden" : true
					},
					"device_display_led" : {
						"friendly_name" : "SPI Display LED Backlight Pin",
						"description" : "GPIO Pin for the SPI Display LED Backlight.",
						"options" : { "5" : "GPIO5" },
						"settings" : ["platform", "devices", "display", "led"],
						"hidden" : true
					},
					"device_display_rst" : {
						"friendly_name" : "SPI Display Reset Pin",
						"description" : "GPIO Pin for the SPI Display Reset.",
						"options" : { "25" : "GPIO25" },
						"settings" : ["platform", "devices", "display", "rst"],
						"hidden" : true
					},
					"device_distance_echo" : {
						"friendly_name" : "Distance Sensor ECHO GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor ECHO",
						"options" : { "27" : "GPIO27" },
						"settings" : ["platform", "devices", "distance", "echo"],
						"hidden" : true
					},
					"device_distance_trig" : {
						"friendly_name" : "Distance Sensor Trigger GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor Trigger",
						"options" : { "23" : "GPIO23" },
						"settings" : ["platform", "devices", "distance", "trig"],
						"hidden" : true
					},
					"device_input_down_dt" : {
						"friendly_name" : "Down Button / Encoder DT",
						"description" : "GPIO Pin for Down Button / Encoder DT",
						"options" : { "20" : "GPIO20" },
						"settings" : ["platform", "devices", "input", "down_dt"],
						"hidden" : true
					},
					"device_input_enter_sw" : {
						"friendly_name" : "Enter Button / Encoder SW",
						"description" : "GPIO Pin for Enter Button / Encoder SW",
						"options" : { "21" : "GPIO21" },
						"settings" : ["platform", "devices", "input", "enter_sw"],
						"hidden" : true
					},
					"device_input_up_clk" : {
						"friendly_name" : "Up Button / Encoder CLK",
						"description" : "GPIO Pin for Up Button / Encoder CLK",
						"options" : { "16" : "GPIO16" },
						"settings" : ["platform", "devices", "input", "up_clk"],
						"hidden" : true
					},
					"system_1wire" : {
						"friendly_name" : "1Wire GPIO Pin",
						"description" : "GPIO Pin for 1Wire bus/interface.  Used for DS18B20 sensors.",
						"options" : { "None" : "None", "6" : "GPIO6", "12" : "GPIO12", "13" : "GPIO13", "19" : "GPIO19", "23" : "GPIO23", "26" : "GPIO26", "27" : "GPIO27" },
						"settings" : ["platform", "system", "1WIRE"]
					},
					"system_spi0_ce0" : {
						"friendly_name" : "SPI0 CE0 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS0.",
						"options" : { "8" : "GPIO8"},
						"settings" : ["platform", "system", "SPI0", "CE0"],
						"hidden" : true
					},
					"system_spi0_ce1" : {
						"friendly_name" : "SPI0 CE1 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS1.",
						"options" : { "7" : "GPIO7"},
						"settings" : ["platform", "system", "SPI0", "CE1"],
						"hidden" : true
					},
					"real_hw" : {
						"friendly_name" : "Real Hardware",
						"description" : "Select Yes if running on real hardware (Default).  Select No if running in a test environment.",
						"options" : { "True" : "Yes", "False" : "No (Test Only)" },
						"settings" : ["platform", "real_hw"]
					}					
				}
			},
			"pcb_pwm" : {
				"friendly_name" : "PiFire PCB PWM",
				"filename" : "raspberry_pi_all",
				"description" : "Default settings/configuration for the PiFire PCB PWM designed by James Weber.",
				"default" : false,
				"image" : "pcb_pwm.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-hardware-pwm"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-pwm", "-s", "-i"]],
				"settings_dependencies" : {
					"current" : {
						"friendly_name" : "Platform Selected",
						"description" : "Selects the current platform.",
						"options" : { "pcb_pwm" : "PiFire PCB PWM" },
						"settings" : ["platform", "current"],
						"hidden" : true
					},
					"system_type" : {
						"friendly_name" : "System Type",
						"description" : "Select the system that you will be using.  By default on most platforms will be the Raspberry Pi.  Select Prototype only if you are doing development testing.",
						"options" : { "raspberry_pi_all" : "Raspberry Pi (ALL)", "prototype" : "Prototype / Test Only" },
						"settings" : ["platform", "system_type"]
					},
					"standalone" : {
						"friendly_name" : "Standalone",
						"description" : "Select if your are using PiFire alongside the OEM Controller. ",
						"options" : { "True" : "PiFire Only", "False" : "OEM Controller Present" },
						"settings" : ["platform", "standalone"]
					},
					"triggerlevel" : {
						"friendly_name" : "Relay Type",
						"description" : "Select the trigger level for the relays on the platform.  ",
						"options" : { "HIGH" : "Active High" },
						"settings" : ["platform", "triggerlevel"],
						"hidden" : true
					},
					"dc_fan" : {
						"friendly_name" : "Fan Type",
						"description" : "Select if your platform supports a DC(PWM) fan or uses a regular AC Fan. ",
						"options" : { "True" : "DC Fan" },
						"settings" : ["platform", "dc_fan"],
						"hidden" : true
					},
					"output_auger" : {
						"friendly_name" : "Auger Relay GPIO Pin",
						"description" : "Select the GPIO used for the Auger relay.",
						"options" : { "14" : "GPIO14" },
						"settings" : ["platform", "outputs", "auger"],
						"hidden" : true
					},
					"output_dc_fan" : {
						"friendly_name" : "DC Fan GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan.",
						"options" : { "26" : "GPIO26" },  
						"settings" : ["platform", "outputs", "dc_fan"],
						"hidden" : true
					},
					"output_fan" : {
						"friendly_name" : "AC Fan Relay GPIO Pin",
						"description" : "Select the GPIO used for enabling/disabling fan.",
						"options" : { "15" : "GPIO15" },						
						"settings" : ["platform", "outputs", "fan"],
						"hidden" : true
					},
					"output_igniter" : {
						"friendly_name" : "Igniter Relay GPIO Pin",
						"description" : "Select the GPIO used for the Igniter relay.",
						"options" : { "18" : "GPIO18" },
						"settings" : ["platform", "outputs", "igniter"],
						"hidden" : true
					},
					"output_power" : {
						"friendly_name" : "Power Gate Relay GPIO Pin",
						"description" : "Select the GPIO used for the AC Power Gate.",
						"options" : { "4" : "GPIO4" },
						"settings" : ["platform", "outputs", "power"],
						"hidden" : true
					},
					"output_pwm" : {
						"friendly_name" : "DC Fan PWM GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan PWM.  Note that this should be a PWM capable GPIO.",
						"options" : { "13" : "GPIO13" },
						"settings" : ["platform", "outputs", "pwm"],
						"hidden" : true
					},
					"input_selector" : {
						"friendly_name" : "Controller Select GPIO Pin",
						"description" : "If the OEM controller is present alongside the PiFire controller, this GPIO will be used to select the active controller. Note that this will not be utilized unless 'Standalone' is set to False.  This should be set to 'None' if not utilized.",
						"options" : { "17" : "GPIO17" },
						"settings" : ["platform", "inputs", "selector"],
						"hidden" : true
					},
					"input_shutdown" : {
						"friendly_name" : "System Shutdown GPIO Pin",
						"description" : "GPIO Pin configured to shutdown the system.  Used for the wake/shutdown button on some designs.  Set this to 'None' if not utilized.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "inputs", "shutdown"],
						"hidden" : true
					},
					"device_display_dc" : {
						"friendly_name" : "SPI Display DC Pin",
						"description" : "GPIO Pin for the SPI Display DC Pin.",
						"options" : { "24" : "GPIO24" },
						"settings" : ["platform", "devices", "display", "dc"],
						"hidden" : true
					},
					"device_display_led" : {
						"friendly_name" : "SPI Display LED Backlight Pin",
						"description" : "GPIO Pin for the SPI Display LED Backlight.",
						"options" : { "5" : "GPIO5" },
						"settings" : ["platform", "devices", "display", "led"],
						"hidden" : true
					},
					"device_display_rst" : {
						"friendly_name" : "SPI Display Reset Pin",
						"description" : "GPIO Pin for the SPI Display Reset.",
						"options" : { "25" : "GPIO25" },
						"settings" : ["platform", "devices", "display", "rst"],
						"hidden" : true
					},
					"device_distance_echo" : {
						"friendly_name" : "Distance Sensor ECHO GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor ECHO",
						"options" : { "27" : "GPIO27" },
						"settings" : ["platform", "devices", "distance", "echo"],
						"hidden" : true
					},
					"device_distance_trig" : {
						"friendly_name" : "Distance Sensor Trigger GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor Trigger",
						"options" : { "23" : "GPIO23" },
						"settings" : ["platform", "devices", "distance", "trig"],
						"hidden" : true
					},
					"device_input_down_dt" : {
						"friendly_name" : "Down Button / Encoder DT",
						"description" : "GPIO Pin for Down Button / Encoder DT",
						"options" : { "20" : "GPIO20" },
						"settings" : ["platform", "devices", "input", "down_dt"],
						"hidden" : true
					},
					"device_input_enter_sw" : {
						"friendly_name" : "Enter Button / Encoder SW",
						"description" : "GPIO Pin for Enter Button / Encoder SW",
						"options" : { "21" : "GPIO21" },
						"settings" : ["platform", "devices", "input", "enter_sw"],
						"hidden" : true
					},
					"device_input_up_clk" : {
						"friendly_name" : "Up Button / Encoder CLK",
						"description" : "GPIO Pin for Up Button / Encoder CLK",
						"options" : { "16" : "GPIO16" },
						"settings" : ["platform", "devices", "input", "up_clk"],
						"hidden" : true
					},
					"system_1wire" : {
						"friendly_name" : "1Wire GPIO Pin",
						"description" : "GPIO Pin for 1Wire bus/interface.  Used for DS18B20 sensors.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "system", "1WIRE"],
						"hidden" : true
					},
					"system_spi0_ce0" : {
						"friendly_name" : "SPI0 CE0 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS0.",
						"options" : { "8" : "GPIO8"},
						"settings" : ["platform", "system", "SPI0", "CE0"],
						"hidden" : true
					},
					"system_spi0_ce1" : {
						"friendly_name" : "SPI0 CE1 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS1.",
						"options" : { "7" : "GPIO7"},
						"settings" : ["platform", "system", "SPI0", "CE1"],
						"hidden" : true
					},
					"real_hw" : {
						"friendly_name" : "Real Hardware",
						"description" : "Select Yes if running on real hardware (Default).  Select No if running in a test environment.",
						"options" : { "True" : "Yes", "False" : "No (Test Only)" },
						"settings" : ["platform", "real_hw"]
					}					
				}
			},
			"pcb_4.x.x" : {
				"friendly_name" : "PiFire PCB 4.x.x Modular PCB",
				"filename" : "raspberry_pi_all",
				"description" : "Default settings/configuration for the PiFire PCB v4.x.x modular PCB.  This PCB aims to provide modular options to the user for probe inputs and relay outputs.",
				"default" : false,
				"image" : "pcb_4.x.x.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-hardware-pwm"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-pwm", "-ow", "-bl", "-s", "-i", "-gs"]],
				"settings_dependencies" : {
					"current" : {
						"friendly_name" : "Platform Selected",
						"description" : "Selects the current platform.",
						"options" : { "pcb_4.x.x" : "PiFire PCB v4.x.x" },
						"settings" : ["platform", "current"],
						"hidden" : true
					},
					"system_type" : {
						"friendly_name" : "System Type",
						"description" : "Select the system that you will be using.  By default on most platforms will be the Raspberry Pi.  Select Prototype only if you are doing development testing.",
						"options" : { "raspberry_pi_all" : "Raspberry Pi (ALL)", "prototype" : "Prototype / Test Only" },
						"settings" : ["platform", "system_type"]
					},
					"standalone" : {
						"friendly_name" : "Standalone",
						"description" : "Select if your are using PiFire alongside the OEM Controller. ",
						"options" : { "True" : "PiFire Only" },
						"settings" : ["platform", "standalone"],
						"hidden" : true
					},
					"triggerlevel" : {
						"friendly_name" : "Relay Type",
						"description" : "Select the trigger level for the relays attached to the platform.",
						"options" : { "LOW" : "Active Low", "HIGH" : "Active High" },
						"settings" : ["platform", "triggerlevel"]
					},
					"dc_fan" : {
						"friendly_name" : "Fan Type",
						"description" : "Select if your platform supports a DC(PWM) fan or uses a regular AC Fan.",
						"options" : { "True" : "DC Fan (PWM)", "False" : "AC Fan" },
						"settings" : ["platform", "dc_fan"]
					},
					"output_auger" : {
						"friendly_name" : "Auger Relay GPIO Pin",
						"description" : "Select the GPIO used for the Auger relay.",
						"options" : { "23" : "GPIO23" },
						"settings" : ["platform", "outputs", "auger"],
						"hidden" : true
					},
					"output_dc_fan" : {
						"friendly_name" : "DC Fan GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan.",
						"options" : { "26" : "GPIO26" },  
						"settings" : ["platform", "outputs", "dc_fan"],
						"hidden" : true
					},
					"output_fan" : {
						"friendly_name" : "AC Fan Relay GPIO Pin",
						"description" : "Select the GPIO used for enabling/disabling fan.",
						"options" : { "26": "GPIO26" },
						"settings" : ["platform", "outputs", "fan"],
						"hidden" : true
					},
					"output_igniter" : {
						"friendly_name" : "Igniter Relay GPIO Pin",
						"description" : "Select the GPIO used for the Igniter relay.",
						"options" : { "18" : "GPIO18" },
						"settings" : ["platform", "outputs", "igniter"],
						"hidden" : true
					},
					"output_power" : {
						"friendly_name" : "Power Gate Relay GPIO Pin",
						"description" : "Select the GPIO used for the AC Power Gate.",
						"options" : { "22" : "GPIO22" },
						"settings" : ["platform", "outputs", "power"],
						"hidden" : true
					},
					"output_pwm" : {
						"friendly_name" : "DC Fan PWM GPIO Pin",
						"description" : "Select the GPIO used for the DC Fan PWM.  Note that this should be a PWM capable GPIO.",
						"options" : { "13" : "GPIO13" },
						"settings" : ["platform", "outputs", "pwm"],
						"hidden" : true
					},
					"input_selector" : {
						"friendly_name" : "Controller Select GPIO Pin",
						"description" : "If the OEM controller is present alongside the PiFire controller, this GPIO will be used to select the active controller. Note that this will not be utilized unless 'Standalone' is set to False.  This should be set to 'None' if not utilized.",
						"options" : { "None" : "None" },
						"settings" : ["platform", "inputs", "selector"],
						"hidden" : true
					},
					"input_shutdown" : {
						"friendly_name" : "System Shutdown GPIO Pin",
						"description" : "GPIO Pin configured to shutdown the system.  Used for the wake/shutdown button on some designs.  Set this to 'None' if not utilized.",
						"options" : { "17" : "GPIO17" },
						"settings" : ["platform", "inputs", "shutdown"],
						"hidden" : true
					},
					"device_display_dc" : {
						"friendly_name" : "SPI Display DC Pin",
						"description" : "GPIO Pin for the SPI Display DC Pin.",
						"options" : { "24" : "GPIO24" },
						"settings" : ["platform", "devices", "display", "dc"],
						"hidden" : true
					},
					"device_display_led" : {
						"friendly_name" : "SPI Display LED Backlight Pin",
						"description" : "GPIO Pin for the SPI Display LED Backlight.",
						"options" : { "5" : "GPIO5" },
						"settings" : ["platform", "devices", "display", "led"],
						"hidden" : true
					},
					"device_display_rst" : {
						"friendly_name" : "SPI Display Reset Pin",
						"description" : "GPIO Pin for the SPI Display Reset.",
						"options" : { "25" : "GPIO25" },
						"settings" : ["platform", "devices", "display", "rst"],
						"hidden" : true
					},
					"device_distance_echo" : {
						"friendly_name" : "Distance Sensor ECHO GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor ECHO",
						"options" : { "27" : "GPIO27" },
						"settings" : ["platform", "devices", "distance", "echo"],
						"hidden" : true
					},
					"device_distance_trig" : {
						"friendly_name" : "Distance Sensor Trigger GPIO",
						"description" : "GPIO Pin for the HCSR04 Ultrasonic distance sensor Trigger",
						"options" : { "23" : "GPIO23" },
						"settings" : ["platform", "devices", "distance", "trig"],
						"hidden" : true
					},
					"device_input_down_dt" : {
						"friendly_name" : "Down Button / Encoder DT",
						"description" : "GPIO Pin for Down Button / Encoder DT",
						"options" : { "16" : "GPIO16" },
						"settings" : ["platform", "devices", "input", "down_dt"],
						"hidden" : true
					},
					"device_input_enter_sw" : {
						"friendly_name" : "Enter Button / Encoder SW",
						"description" : "GPIO Pin for Enter Button / Encoder SW",
						"options" : { "15" : "GPIO15" },
						"settings" : ["platform", "devices", "input", "enter_sw"],
						"hidden" : true
					},
					"device_input_up_clk" : {
						"friendly_name" : "Up Button / Encoder CLK",
						"description" : "GPIO Pin for Up Button / Encoder CLK",
						"options" : { "14" : "GPIO14" },
						"settings" : ["platform", "devices", "input", "up_clk"],
						"hidden" : true
					},
					"system_1wire" : {
						"friendly_name" : "1Wire GPIO Pin",
						"description" : "GPIO Pin for 1Wire bus/interface.  Used for DS18B20 sensors.",
						"options" : { "4" : "GPIO4" },
						"settings" : ["platform", "system", "1WIRE"],
						"hidden" : true
					},
					"system_spi0_ce0" : {
						"friendly_name" : "SPI0 CE0 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS0. (SPI Display Port)",
						"options" : { "8" : "GPIO8", "7" : "GPIO7"},
						"settings" : ["platform", "system", "SPI0", "CE0"]
					},
					"system_spi0_ce1" : {
						"friendly_name" : "SPI0 CE1 GPIO Pin",
						"description" : "GPIO Pin for SPI0 bus/interface CE/CS1. (SPI Aux Port)",
						"options" : { "7" : "GPIO7", "8" : "GPIO8", "6" : "GPIO6" },
						"settings" : ["platform", "system", "SPI0", "CE1"]
					},
					"real_hw" : {
						"friendly_name" : "Real Hardware",
						"description" : "Select Yes if running on real hardware (Default).  Select No if running in a test environment.",
						"options" : { "True" : "Yes", "False" : "No (Test Only)" },
						"settings" : ["platform", "real_hw"]
					}					
				}
			}
		}, 
		"probes" : {
			"ads1115_adafruit" : {
				"friendly_name" : "ADS1115 Adafruit",
				"filename" : "ads1115_adafruit",
				"description" : "This is the default module supporting ALL of the ADS1115 16-Bit ADC's and is based on Adafruit's Circuit Python implementation/module.  This version is still actively updated and may support a wider range of hardware.  There has been rumors of sellers shipping ADS1015 12-Bit ADC's instead of the ADS1115 16-Bit ADC's.  If you got one of these, you can try the ADS1015 Adafruit library instead.",
				"default" : true,
				"image" : "ads1115.png",
				"reboot_required" : false,
				"py_dependencies" : ["adafruit-circuitpython-ads1x15"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["ADC0", "ADC1", "ADC2", "ADC3"],
					"type" : "adc",
					"config" : [
						{
							"label" : "i2c_bus_addr", 
							"friendly_name" : "I2C Bus Address",
							"description" : "Select the I2C bus address to use for this device.  Default is 0x48.  If you have more than one ADS1115, you can assign unique device bus address for up to four devices.",
							"type" : "list", 
							"list_values" : ["0x48", "0x49", "0x4A", "0x4B"],
							"list_labels" : ["0x48", "0x49", "0x4A", "0x4B"],
							"default" : "0x48",
							"hidden" : false
						}, 
						{
							"label" : "ADC0_rd", 
							"friendly_name" : "ADC0 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "", 
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ADC1_rd", 
							"friendly_name" : "ADC1 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC2_rd", 
							"friendly_name" : "ADC2 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC3_rd", 
							"friendly_name" : "ADC3 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "voltage_ref", 
							"friendly_name" : "Voltage Source Reference",
							"description" : "Select the voltage reference measured at the top of the resistor dividers (from the power supply source).  Default is 3.28V",
							"type" : "float", 
							"default" : 3.2,
							"min" : 1,
							"max" : 10,
							"step" : 0.001,
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"ads1015_adafruit" : {
				"friendly_name" : "ADS1015 Adafruit",
				"filename" : "ads1015_adafruit",
				"description" : "This module supports the ADS1015 12-Bit ADC based on Adafruit's Circuit Python implementation/module.  This version can also be used with the ADS1115, as it is backward compatible.  Some fidelity may be lost due to the fact that the ADC has less bits to measure with, however in testing it seems to be reasonably good.  Use this if you are having issues with the default ADS1115 module.",
				"default" : false,
				"image" : "ads1115.png",
				"reboot_required" : false,
				"py_dependencies" : ["adafruit-circuitpython-ads1x15"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["ADC0", "ADC1", "ADC2", "ADC3"],
					"type" : "adc",
					"config" : [
						{
							"label" : "i2c_bus_addr", 
							"friendly_name" : "I2C Bus Address",
							"description" : "Select the I2C bus address to use for this device.  Default is 0x48.  If you have more than one ADS1115, you can assign unique device bus address for up to four devices.",
							"type" : "list", 
							"list_values" : ["0x48", "0x49", "0x4A", "0x4B"],
							"list_labels" : ["0x48", "0x49", "0x4A", "0x4B"],						
							"default" : "0x48",
							"hidden" : false
						}, 
						{
							"label" : "ADC0_rd", 
							"friendly_name" : "ADC0 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ADC1_rd", 
							"friendly_name" : "ADC1 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC2_rd", 
							"friendly_name" : "ADC2 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC3_rd", 
							"friendly_name" : "ADC3 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "voltage_ref", 
							"friendly_name" : "Voltage Source Reference",
							"description" : "Select the voltage reference measured at the top of the resistor dividers (from the power supply source).  Default is 3.28V",
							"type" : "float", 
							"default" : 3.2,
							"min" : 1,
							"max" : 10,
							"step" : 0.001,
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"max31865" : {
				"friendly_name" : "MAX31865 RTD",
				"filename" : "max31865",
				"description" : "This SPI device reads RTD style probes, such as the Traeger PT100(PT1000) RTD probe.  Note that special care may need to be taken if this is used with another SPI device (i.e. SPI Display) on the system.",
				"default" : false,
				"image" : "max31865.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["RTD0"],
					"type" : "rtd",
					"config" : [
						{
							"label" : "cs", 
							"friendly_name" : "SPI Chip Select (CS)",
							"description" : "SPI Chip Select (CS/CEx) pin used for this device.",
							"type" : "list",
							"list_values" : ["GPIO2", "GPIO3", "GPIO4", "GPIO5", "GPIO6", "GPIO12", "GPIO13", "GPIO14", "GPIO15", "GPIO16", "GPIO17", "GPIO18", "GPIO19", "GPIO20", "GPIO21", "GPIO22", "GPIO23", "GPIO24", "GPIO25", "GPIO26", "GPIO27"],
							"list_labels" : ["D2", "D3", "D4", "D5", "D6", "D12", "D13", "D14", "D15", "D16", "D17", "D18", "D19", "D20", "D21", "D22", "D23", "D24", "D25", "D26", "D27"],
							"default" : "D2",
							"hidden" : false
						}, 
						{
							"label" : "rtd_nominal", 
							"friendly_name" : "RTD Nominal",
							"description" : "RTD Nominal Resistance Value in Ohms. Default 1000 Ohms.",
							"type" : "int",
							"default" : 1000,
							"min": 1, 
							"max": 10000,
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ref_resistor", 
							"friendly_name" : "Reference Resistor",
							"description" : "Reference Resistor Value in Ohms. Default 4300 Ohms. (Typical options: 4300, 430)",
							"type" : "int",
							"default" : 4300,
							"min": 1, 
							"max": 10000,
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "wires", 
							"friendly_name" : "RTD Wires",
							"description" : "Number of RTD wires used for input.  Default 2",
							"type" : "list",
							"list_values" : ["2", "3", "4"],
							"list_labels" : ["2 Wires", "3 Wires", "4 Wires"],
							"default" : "2",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"max31865_adafruit" : {
				"friendly_name" : "MAX31865 RTD Adafruit",
				"filename" : "max31865_adafruit",
				"description" : "This SPI device reads RTD style probes, such as the Traeger PT100(PT1000) RTD probe.  This version uses the Adafruit CircuitPython modules.  It should be noted that this module does not allow the use of CE0 or CE1, thus another GPIO should be used for the CS pin. Note that special care may need to be taken if this is used with another SPI device (i.e. SPI Display) on the system.",
				"default" : false,
				"image" : "max31865.png",
				"reboot_required" : false,
				"py_dependencies" : ["adafruit-circuitpython-max31865"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["RTD0"],
					"type" : "rtd",
					"config" : [
						{
							"label" : "cs", 
							"friendly_name" : "SPI Chip Select (CS)",
							"description" : "SPI Chip Select (CS/CEx) pin used for this device.",
							"type" : "list",
							"list_values" : ["GPIO2", "GPIO3", "GPIO4", "GPIO5", "GPIO6", "GPIO12", "GPIO13", "GPIO14", "GPIO15", "GPIO16", "GPIO17", "GPIO18", "GPIO19", "GPIO20", "GPIO21", "GPIO22", "GPIO23", "GPIO24", "GPIO25", "GPIO26", "GPIO27"],
							"list_labels" : ["D2", "D3", "D4", "D5", "D6", "D12", "D13", "D14", "D15", "D16", "D17", "D18", "D19", "D20", "D21", "D22", "D23", "D24", "D25", "D26", "D27"],
							"default" : "D2",
							"hidden" : false
						}, 
						{
							"label" : "rtd_nominal", 
							"friendly_name" : "RTD Nominal",
							"description" : "RTD Nominal Resistance Value in Ohms. Default 1000 Ohms.",
							"type" : "int",
							"default" : 1000,
							"min": 1, 
							"max": 10000,
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ref_resistor", 
							"friendly_name" : "Reference Resistor",
							"description" : "Reference Resistor Value in Ohms. Default 4300 Ohms. (Typical options: 4300, 430)",
							"type" : "int",
							"default" : 4300,
							"min": 1, 
							"max": 10000,
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "wires", 
							"friendly_name" : "RTD Wires",
							"description" : "Number of RTD wires used for input.  Default 2",
							"type" : "list",
							"list_values" : ["2", "3", "4"],
							"list_labels" : ["2 Wires", "3 Wires", "4 Wires"],
							"default" : "2",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"mcp9600_adafruit" : {
				"friendly_name" : "MCP9600 Thermocouple Amplifier Adafruit",
				"filename" : "mcp9600_adafruit",
				"description" : "This I2C device reads K-Type thermocouples / probes. Moreover the MCP9600 can interface with just about any thermocouple type: K, J, T, N, S, E, B and R type are all supported.  This version uses the Adafruit CircuitPython modules.  Note that this device can be intolerant of higher i2c bus speeds, so you may need to reduce the i2c bus speed manually.",
				"default" : false,
				"image" : "mcp9600.png",
				"reboot_required" : false,
				"py_dependencies" : ["adafruit-circuitpython-mcp9600"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["KTT0"],
					"type" : "thermocouple",
					"config" : [
						{
							"label" : "i2c_bus_addr", 
							"friendly_name" : "I2C Bus Address",
							"description" : "Select the I2C bus address to use for this device.  Default is 0x67.  If you have more than one MCP9600, you can assign unique device bus address for up to five devices.",
							"type" : "list", 
							"list_values" : ["0x67", "0x66", "0x65", "0x64", "0x60"],
							"list_labels" : ["0x67", "0x66", "0x65", "0x64", "0x60"],
							"default" : "0x67",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"bt_ibbq" : {
				"friendly_name" : "Bluetooth - iBBQ / Inkbird BT",
				"filename" : "bt_ibbq",
				"description" : "This device module supports Bluetooth LE iBBQ devices such as the Inkbird IBT-4XS four probe thermometer.  Note that the device can take up to a minute to be discovered and to start streaming data once turned on.  This has only been tested with the Inkbird IBT-4XS, but it may also work with other iBBQ models.  This module is still experimental, so feedback is welcome.",
				"default" : false,
				"image" : "bt_ibbq.png",
				"reboot_required" : false,
				"py_dependencies" : ["bluepy"], 
				"apt_dependencies" : ["libglib2.0-dev"],
				"command_list" : [["sudo", "bash", "/usr/local/bin/pifire/wizard/bluepy.sh"]],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["BT0", "BT1", "BT2", "BT3"],
					"type" : "bluetooth",
					"config" : [
						{
							"label" : "hardware_id", 
							"friendly_name" : "Hardware ID",
							"description" : "This is the unique Hardware ID or Address of the peripheral (format: xx:xx:xx:xx:xx:xx).  This should be discovered during scanning.",
							"type" : "bt_address", 
							"default" : "",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["True", "False"],
							"list_labels" : ["Transient (sometimes detached)", "Fixed (always attached)"],
							"default" : "True",
							"hidden" : true
						}
					]
				}			
			},
			"bt_meater_exp" : {
				"friendly_name" : "BT - Meater Experimental",
				"filename" : "bt_meater_exp",
				"description" : "This device module supports Bluetooth LE Meater probe thermometer devices and is experimental. Not that this module relies on the simplepyble module and will not co-exist with other bluetooth modules based on bluepy.  This is not recommended for production use.",
				"default" : false,
				"image" : "bt_meater.png",
				"reboot_required" : false,
				"py_dependencies" : ["simplepyble==0.7.3", "icecream"], 
				"apt_dependencies" : ["libdbus-1-dev"],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["BT0"],
					"type" : "bluetooth",
					"config" : [
						{
							"label" : "hardware_id", 
							"friendly_name" : "Hardware ID",
							"description" : "This is the unique Hardware ID or Address of the peripheral (format: xx:xx:xx:xx:xx:xx).  This should be discovered during scanning.",
							"type" : "bt_address", 
							"default" : "",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["True", "False"],
							"list_labels" : ["Transient (sometimes detached)", "Fixed (always attached)"],
							"default" : "True",
							"hidden" : true
						}
					]
				}			
			},
			"bt_meater" : {
				"friendly_name" : "Bluetooth - Meater",
				"filename" : "bt_meater",
				"description" : "This device module supports Bluetooth LE Meater probe thermometer devices (Original Meater and Meater Plus supported).  At this time the Meater Pro (Meater 2 Plus) devices are not supported. ",
				"default" : false,
				"image" : "bt_meater.png",
				"reboot_required" : false,
				"py_dependencies" : ["bluepy"], 
				"apt_dependencies" : ["libglib2.0-dev"],
				"command_list" : [["sudo", "bash", "/usr/local/bin/pifire/wizard/bluepy.sh"]],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["BT_Tip", "BT_Ambient"],
					"type" : "bluetooth",
					"config" : [
						{
							"label" : "hardware_id", 
							"friendly_name" : "Hardware ID",
							"description" : "This is the unique Hardware ID or Address of the peripheral (format: xx:xx:xx:xx:xx:xx).  This should be discovered during scanning.",
							"type" : "bt_address", 
							"default" : "",
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["True", "False"],
							"list_labels" : ["Transient (sometimes detached)", "Fixed (always attached)"],
							"default" : "True",
							"hidden" : true
						}
					]
				}			
			},
			"prototype" : {
				"friendly_name" : "Prototype",
				"filename" : "prototype",
				"description" : "This is the test module for probe input.  It should only be used for testing & debug.",
				"default" : false,
				"image" : "prototype.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["ADC0", "ADC1", "ADC2", "ADC3"],
					"type" : "adc",
					"config" : [
						{
							"label" : "i2c_bus_addr", 
							"friendly_name" : "I2C Bus Address",
							"description" : "Select the I2C bus address to use for this device.  Default is 0x48.  If you have more than one ADS1115, you can assign unique device bus address for up to four devices.",
							"type" : "list", 
							"list_values" : ["0x48", "0x49", "0x4A", "0x4B"],
							"list_labels" : ["0x48", "0x49", "0x4A", "0x4B"],
							"default" : "0x48",
							"hidden" : false
						}, 
						{
							"label" : "ADC0_rd", 
							"friendly_name" : "ADC0 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ADC1_rd", 
							"friendly_name" : "ADC1 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC2_rd", 
							"friendly_name" : "ADC2 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC3_rd", 
							"friendly_name" : "ADC3 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "voltage_ref", 
							"friendly_name" : "Voltage Source Reference",
							"description" : "Select the voltage reference measured at the top of the resistor dividers (from the power supply source).  Default is 3.28V",
							"type" : "float", 
							"default" : 3.2,
							"min" : 1,
							"max" : 10,
							"step" : 0.001,
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : false
						}
					]
				}			
			},
			"ads1115" : {
				"friendly_name" : "Legacy ADS1115",
				"filename" : "ads1115",
				"description" : "WARNING: This module is no longer the default due to reports of issues.  If you experience trouble with this module, use the Adafruit modules.  This is an alternative PiFire module supporting the ADS1115 16-Bit ADC and should only be used if you are experiencing difficulty with the Adafruit module.",
				"default" : false,
				"image" : "ads1115.png",
				"reboot_required" : false,
				"py_dependencies" : ["ADS1115"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["ADC0", "ADC1", "ADC2", "ADC3"],
					"type" : "adc",
					"config" : [
						{
							"label" : "i2c_bus_addr", 
							"friendly_name" : "I2C Bus Address",
							"description" : "Select the I2C bus address to use for this device.  Default is 0x48.  If you have more than one ADS1115, you can assign unique device bus address for up to four devices.",
							"type" : "list", 
							"list_values" : ["0x48", "0x49", "0x4A", "0x4B"],
							"list_labels" : ["0x48", "0x49", "0x4A", "0x4B"],							
							"default" : "0x48",
							"hidden" : false
						}, 
						{
							"label" : "ADC0_rd", 
							"friendly_name" : "ADC0 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						}, 
						{
							"label" : "ADC1_rd", 
							"friendly_name" : "ADC1 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC2_rd", 
							"friendly_name" : "ADC2 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "ADC3_rd", 
							"friendly_name" : "ADC3 Resistor Divider Value",
							"description" : "Select the resistor divider value for this probe port.  Default is 10000 Ohm for temperature probes.",
							"type" : "int", 
							"default" : 10000,
							"min" : 1,
							"max" : "",
							"step" : 1,
							"hidden" : false
						},
						{
							"label" : "voltage_ref", 
							"friendly_name" : "Voltage Source Reference",
							"description" : "Select the voltage reference measured at the top of the resistor dividers (from the power supply source).  Default is 3.28V",
							"type" : "float", 
							"default" : 3.2,
							"min" : 1,
							"max" : 10,
							"step" : 0.001,
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}
			},
			"ds18b20" : {
				"friendly_name" : "DS18B20 1-Wire Digital Thermometer",
				"filename" : "ds18b20",
				"description" : "The DS18B20 digital thermometer provides Celsius temperature measurements over a 1-wire communication bus.  This module is currently experimental, but may be useful for calibrating probe profiles for other probes as itself has been factory calibrated.",
				"default" : false,
				"image" : "ds18b20.png",
				"reboot_required" : true,
				"py_dependencies" : ["w1thermsensor"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "bash", "wizard/ds18b20.sh"]],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (this can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["DS0"],
					"type" : "1wire",
					"config" : [
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "True",
							"hidden" : false
						}
					]
				}
			},
			"virtual_average" : {
				"friendly_name" : "Virtual Probes - Average",
				"filename" : "virtual_average",
				"description" : "This is a virtual probe module that will average specific ports on real devices.",
				"default" : false,
				"image" : "virtual_probe.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["VIRT0"],
					"type" : "virtual",
					"config" : [
						{
							"label" : "probes_list", 
							"friendly_name" : "Average Probes",
							"description" : "A list of probes from other devices, to average. Select which probes should be averaged together with ctrl+click.",
							"type" : "probes_list", 
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}			
			},
			"virtual_highest" : {
				"friendly_name" : "Virtual Probes - Highest",
				"filename" : "virtual_highest",
				"description" : "This is a virtual probe module that will return the highest value from specific ports on real devices.",
				"default" : false,
				"image" : "virtual_probe.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["VIRT0"],
					"type" : "virtual",
					"config" : [
						{
							"label" : "probes_list", 
							"friendly_name" : "Use Probes",
							"description" : "A list of probes from other devices, to determine the highest value. Select which probes should used with ctrl+click.",
							"type" : "probes_list", 
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}			
			},
			"virtual_lowest" : {
				"friendly_name" : "Virtual Probes - Lowest",
				"filename" : "virtual_lowest",
				"description" : "This is a virtual probe module that will return the lowest value from specific ports on real devices.",
				"default" : false,
				"image" : "virtual_probe.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["VIRT0"],
					"type" : "virtual",
					"config" : [
						{
							"label" : "probes_list", 
							"friendly_name" : "Use Probes",
							"description" : "A list of probes from other devices, to determine the lowest value. Select which probes should used with ctrl+click.",
							"type" : "probes_list", 
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}			
			},
			"virtual_median" : {
				"friendly_name" : "Virtual Probes - Median",
				"filename" : "virtual_median",
				"description" : "This is a virtual probe module that will return the median value from specific ports on real devices.",
				"default" : false,
				"image" : "virtual_probe.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {
					"units" : {
						"friendly_name" : "Temp Units",
						"description" : "Select the temperature units to use for PiFire globally.  (This can be modified in settings later)",
						"options" : {"F" : "Fahrenheit", "C": "Celsius"},
						"settings" : ["globals", "units"]
					}
				},
				"device_specific" : {
					"ports" : ["VIRT0"],
					"type" : "virtual",
					"config" : [
						{
							"label" : "probes_list", 
							"friendly_name" : "Use Probes",
							"description" : "A list of probes from other devices, to determine the median value. Select which probes should used with ctrl+click.",
							"type" : "probes_list", 
							"hidden" : false
						},
						{
							"label" : "transient", 
							"friendly_name" : "Transient",
							"description" : "Select whether this device is fixed/always attached (default) or if it is transient/sometimes detached.",
							"type" : "list", 
							"list_values" : ["False", "True"],
							"list_labels" : ["Fixed (always attached)", "Transient (sometimes detached)"],
							"default" : "False",
							"hidden" : true
						}
					]
				}			
			}
		},
		"display" : {
			"ili9341e" : {
				"friendly_name" : "ILI9341 TFT with Rotary Encoder Input (standard)",
				"filename" : "ili9341e",
				"description" : "The ILI9341 TFT Display Module LCD Screen is an affordable, popular display with a 320x240 resolution and color.  It comes in many different physical sizes from 2\" - 3.2\" with and without capacitive touch. This version of the module supports input based on the KY-040 rotary encoder.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "ili9341-ky040.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pyky040==0.1.4", ">=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" :{},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9341em" : {
				"friendly_name" : "ILI9341 TFT with Rotary Encoder Input (max31865 version)",
				"filename" : "ili9341em",
				"description" : "NOTE: This version should be used if also using the max31865, due to SPI conflicts with the standard implementation.  The ILI9341 TFT Display Module LCD Screen is an affordable, popular display with a 320x240 resolution and color.  It comes in many different physical sizes from 2\" - 3.2\" with and without capacitive touch. This version of the module supports input based on the KY-040 rotary encoder.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "ili9341-ky040.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pyky040==0.1.4", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9341" : {
				"friendly_name" : "ILI9341 TFT",
				"filename" : "ili9341",
				"description" : "The ILI9341 TFT Display Module LCD Screen is an affordable, popular display with a 320x240 resolution and color.  It comes in many different physical sizes from 2\" - 3.2\" with and without capacitive touch.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "ili9341.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9341b" : {
				"friendly_name" : "ILI9341 TFT with 3-Button Input",
				"filename" : "ili9341b",
				"description" : "The ILI9341 TFT Display Module LCD Screen is an affordable, popular display with a 320x240 resolution and color.  It comes in many different physical sizes from 2\" - 3.2\" with and without capacitive touch. This version of the module supports a three button input.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : true,
				"image" : "ili9341b.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pillow>=9.2.0", "gpiozero"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9341f" : {
				"friendly_name" : "ILI9341 TFT Flex",
				"filename" : "ili9341f",
				"description" : "The ILI9341 TFT Display Module LCD Screen is an affordable, popular display with a 320x240 resolution and color.  It comes in many different physical sizes from 2\" - 3.2\" with and without capacitive touch. This version of the module supports a three button input.",
				"notes" : "Pinout:  Display - MISO = MISO(Pin 21), LED = GPIO05, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO24, RST = GPIO25, CS = CE0(Pin 24). Buttons - UP = GPIO16, DOWN = GPIO20, ENTER = GPIO21, GND = GND, VCC = 3.3V",
				"default" : false,
				"image" : "ili9341.png",
				"reboot_required" : true,
				"py_dependencies" : ["luma.lcd", "pillow>=10.0.0", "gpiozero", "pyky040==0.1.4"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured if equipped. This will be ignored if buttons are not selected as an input type. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					},
					{
						"option_name" : "display_data_filename",
						"option_friendly_name" : "Screen Dimensions", 
						"option_description" : "Select the screen dimensions (width, height) in pixels. (default is 320x240)",
						"option_type" : "list",
						"list_values" : ["./display/ili9341f_320x240.json", "./display/ili9341f_480x320.json"],
						"list_labels" : ["320x240", "480x320"],
						"default" : "./display/ili9341f_320x240.json",
						"hidden" : false
					},
					{
						"option_name" : "input_types_supported",
						"option_friendly_name" : "Input Types Supported", 
						"option_description" : "List of input types supported.  Separate multiple types with a comma.",
						"option_type" : "list",
						"list_values" : [["button"], ["encoder"], ["touch"], ["button", "touch"], ["encoder", "touch"], ["none"]],
						"list_labels" : ["Button", "Encoder", "Touch", "Touch + Button", "Touch + Encoder", "No Input"],
						"default" : ["button", "touch"],
						"hidden" : false
					}
				]
			},
			"ili9488e" : {
				"friendly_name" : "ILI9488 TFT with Rotary Encoder Input",
				"filename" : "ili9488e",
				"description" : "The ILI9488 TFT Display Module LCD Screen is an affordable, popular display with a 480x320 resolution and color.  It comes in 2 different physical sizes, 3.5\" and 4.0\" with and without touch. This version of the module supports input based on the KY-040 rotary encoder.",
				"notes" : "Pinout: Display - MISO = MISO(Pin 21), LED = GPIO05, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO24, RST = GPIO25, CS = CE0(Pin 24).  Encoder - CLK = GPIO16, DT = GPIO20, SW = GPIO21, GND = GND, VCC/+ = 3.3V",
				"default" : false,
				"image" : "ili9488-ky040.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pyky040==0.1.4", ">=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" :{},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9488em" : {
				"friendly_name" : "ILI9488 TFT with Rotary Encoder Input (max31865 version)",
				"filename" : "ili9488em",
				"description" : "NOTE: This version should be used if also using the max31865, due to SPI conflicts with the standard implementation.  The ILI9488 TFT Display Module LCD Screen is an affordable, popular display with a 480x320 resolution and color.  It comes in 2 different physical sizes, 3.5\" and 4.0\" with and without touch. This version of the module supports input based on the KY-040 rotary encoder.",
				"notes" : "Pinout: Display - MISO = MISO(Pin 21), LED = GPIO12, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO16, RST = GPIO20, CS = CE0(Pin 24). Encoder - CLK = GPIO25, DT = GPIO24, SW = GPIO23, GND = GND, VCC/+ = 3.3V",
				"default" : false,
				"image" : "ili9488-ky040.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pyky040==0.1.4", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9488" : {
				"friendly_name" : "ILI9488 TFT",
				"filename" : "ili9488",
				"description" : "The ILI9488 TFT Display Module LCD Screen is an affordable, popular display with a 480x320 resolution and color.  It comes in 2 different physical sizes, 3.5\" and 4.0\" with and without touch.",
				"notes" : "Pinout: MISO = MISO(Pin 21), LED = GPIO05, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO24, RST = GPIO25, CS = CE0(Pin 24)",
				"default" : false,
				"image" : "ili9488.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ili9488b" : {
				"friendly_name" : "ILI988 TFT with 3-Button Input",
				"filename" : "ili9488b",
				"description" : "The ILI9488 TFT Display Module LCD Screen is an affordable, popular display with a 480x320 resolution and color.  It comes in 2 different physical sizes, 3.5\" and 4.0\" with and without touch. This version of the module supports a three button input.",
				"notes" : "Pinout:  Display - MISO = MISO(Pin 21), LED = GPIO05, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO24, RST = GPIO25, CS = CE0(Pin 24). Buttons - UP = GPIO16, DOWN = GPIO20, ENTER = GPIO21, GND = GND, VCC = 3.3V",
				"default" : true,
				"image" : "ili9488b.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pillow>=9.2.0", "gpiozero"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"st7789_240x320b" : {
				"friendly_name" : "ST7789 IPS Display 240x320px w/Button Input",
				"filename" : "st7789_240x320b",
				"description" : "The ST7789 is a 2inch LCD IPS Screen with a resolution of 240x320px and is an affordable spi display with color. This module supports the 240x320 version and provides the advanced color interface (similar to the ILI9341). This version of the module supports a three button input.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789b.png",
				"reboot_required" : false,
				"py_dependencies" : ["st7789", "pillow>=9.2.0", "numpy==1.24.2"],
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"st7789_240x320e" : {
				"friendly_name" : "ST7789 IPS Display 240x320px w/ Rotary Encoder Input",
				"filename" : "st7789_240x320e",
				"description" : "The ST7789 is a 2inch LCD IPS Screen with a resolution of 240x320px and is an affordable spi display with color. This module supports the 240x320 version and provides the advanced color interface (similar to the ILI9341). This version supports input based on the KY-040 rotary encoder.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789e.png",
				"reboot_required" : false,
				"py_dependencies" : ["st7789", "pyky040==0.1.4", "pillow>=9.2.0", "numpy==1.24.2"],
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"st7789_240x320" : {
				"friendly_name" : "ST7789 IPS Display 240x320px",
				"filename" : "st7789_240x320",
				"description" : "The ST7789 is a 2inch LCD IPS Screen with a resolution of 240x320px and is an affordable spi display with color. This module supports the 240x320 version and provides the advanced color interface (similar to the ILI9341).",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789p.png",
				"reboot_required" : false,
				"py_dependencies" : ["st7789", "pillow>=9.2.0", "numpy==1.24.2"],
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"st7789v_240x320" : {
				"friendly_name" : "ST7789V IPS Display 240x320px (Experimental)",
				"filename" : "st7789v_240x320",
				"description" : "The ST7789V (V-Variant) is an LCD IPS Screen with a resolution of 240x320px and is an affordable spi display with color. This module supports the 240x320 version and provides the advanced color interface (similar to the ILI9341). This variant uses a forked library and should be considered experimental.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789p.png",
				"reboot_required" : false,
				"py_dependencies" : ["git+https://github.com/mander1000/st7789-python", "pillow>=9.2.0", "numpy==1.24.2"],
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"st7789v_240x320e" : {
				"friendly_name" : "ST7789V IPS Display 240x320px w/Encoder (Experimental)",
				"filename" : "st7789v_240x320e",
				"description" : "The ST7789V (V-Variant) is an LCD IPS Screen with a resolution of 240x320px and is an affordable spi display with color. This module supports the 240x320 version and provides the advanced color interface (similar to the ILI9341). This variant uses a forked library and should be considered experimental.",
				"notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789e.png",
				"reboot_required" : false,
				"py_dependencies" : ["git+https://github.com/mander1000/st7789-python", "pillow>=9.2.0", "numpy==1.24.2", "pyky040==0.1.4"],
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"none" : {
				"friendly_name" : "None",
				"filename" : "none",
				"description" : "This is for systems without a display.  This module should be selected if no display is present.",
				"default" : false,
				"image" : "none.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : []			
			},
			"prototype" : {
				"friendly_name" : "Prototype",
				"filename" : "prototype",
				"description" : "This is the test module for display.  This should be used for development & debug only.",
				"default" : false,
				"image" : "prototype.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : []			
			},
			"pygame_64x128" : {
				"friendly_name" : "Pygame Test Module 64x128px",
				"filename" : "pygame_64x128",
				"description" : "This is the test module for display using Pygame.  This should be used for development & debug only.",
				"default" : false,
				"image" : "pygame.png",
				"reboot_required" : false,
				"py_dependencies" : ["pygame"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : []			
			},
			"pygame_240x320" : {
				"friendly_name" : "Pygame Test Module 240x320px",
				"filename" : "pygame_240x320",
				"description" : "This is the test module for display using Pygame.  This should be used for development & debug only.",
				"default" : false,
				"image" : "pygame.png",
				"reboot_required" : false,
				"py_dependencies" : ["pygame", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 90, 180, 270],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"pygame_240x320b" : {
				"friendly_name" : "Pygame Test Module 240x320px w/Button Input",
				"filename" : "pygame_240x320b",
				"description" : "This is the test module for display using Pygame.  This should be used for development & debug only.",
				"default" : false,
				"image" : "pygame.png",
				"reboot_required" : false,
				"py_dependencies" : ["pygame", "pillow>=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 90, 180, 270],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"ssd1306" : {
				"friendly_name" : "SSD1306 OLED 64x128px",
				"filename" : "ssd1306",
				"description" : "These displays are small, only about 1\" diagonal, but very readable due to the high contrast of an OLED display. This display is made of 128x64 individual white OLED pixels, each one is turned on or off by the controller chip.",
				"default" : false,
				"image" : "ssd1306.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.oled"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-i"]],
				"settings_dependencies" : {},
				"config" : []			
			},
			"ssd1306b" : {
				"friendly_name" : "SSD1306 OLED 64x128px w/Buttons",
				"filename" : "ssd1306b",
				"description" : "These displays are small, only about 1\" diagonal, but very readable due to the high contrast of an OLED display. This display is made of 128x64 individual white OLED pixels, each one is turned on or off by the controller chip.",
				"default" : false,
				"image" : "ssd1306b.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.oled"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-i"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : []
			},
			"st7789e" : {
			        "friendly_name" : "ST7789 IPS Display 240x240 (using luma.lcd libraries) with Rotary Encoder Input (standard).",
				"filename" : "st7789e",
				"description" : "The ST7789 is a 1.3inch LCD IPS Screen with a resolution of 240x240px and is an affordable SPI display. This version of the module supports input based on the KY-040 rotary encoder.",
				"notes" : "Pinout: Display - MISO = MISO(Pin 21), LED = GPIO05, SCK = SCLK(Pin 23), MOSI = MOSI(Pin 19), DC = GPIO24, RST = GPIO25, CS = CE0(Pin 24).  Encoder - CLK = GPIO16, DT = GPIO20, SW = GPIO21, GND = GND, VCC/+ = 3.3V",
				"default" : false,
			        "image" : "st7789p.png",
				"reboot_required" : false,
				"py_dependencies" : ["luma.lcd", "pyky040==0.1.4", ">=9.2.0"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" :{},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle depending on your mounting position.",
						"option_type" : "list",
						"list_values" : [0, 1, 2, 3],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					}
			        ]	
			},
			"st7789p" : {
				"friendly_name" : "ST7789p IPS Display 240x240px",
				"filename" : "st7789p",
				"description" : "The ST7789 is a 1.3inch LCD IPS Screen with a resolution of 240x240px and is an affordable SPI display.  This one can be complicated to find the right compatible display, so your mileage may vary.  This module supports the 240x240 version and provides a simple color interface (similar to the SSD1306 OLED).  Try display module using luma.lcd libraries if this module results in a black screen.",
			        "notes" : "See documentation for pinout. (https://nebhead.github.io/PiFire-Pages/hardware)",
				"default" : false,
				"image" : "st7789p.png",
				"reboot_required" : false,
				"py_dependencies" : ["st7789", "numpy==1.24.2"], 
				"apt_dependencies" : [],
				"command_list" : [["sudo", "python", "board-config.py", "-s"]],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 180],
						"list_labels" : ["0 Degrees", "180 Degrees"],
						"default" : 0,
						"hidden" : false
					}
				]
			},
			"dsi_800x480t" : {
				"friendly_name" : "Raspberry Pi DSI Connected Display 800x480 w/Touch",
				"filename" : "dsi_800x480t",
				"description" : "Raspberry Pi DSI Connected Display such as the 7\" Raspberry Pi Touch Screen display. Several clones exist which should work perfectly well.",
				"notes" : "This module may take a very long time to install due to the OS dependencies that are required.  Please be aware that this may take more than 10 minutes to install depending on your system and internet connection.",
				"default" : false,
				"image" : "dsi_touch.png",
				"reboot_required" : true,
				"py_dependencies" : ["rpi-backlight", "pillow>=10.0.0", "pygame>=2.5.0"], 
				"apt_dependencies" : ["lightdm", "libsdl2-2.0-0"],
				"command_list" : [["sudo", "python", "board-config.py", "-bl"]],
				"settings_dependencies" : {
					"buttonslevel" : {
						"friendly_name" : "Button Level",
						"description" : "Select how your button hardware is configured if equipped. This will be ignored if buttons are not selected as an input type. (HIGH - Pullups, LOW - Pulldowns)",
						"options" : {"HIGH" : "Pullups", "LOW": "Pulldowns"},
						"settings" : ["platform", "buttonslevel"]
					}
				},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 90, 180, 270],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					},
					{
						"option_name" : "display_data_filename",
						"option_friendly_name" : "Display Data Filename", 
						"option_description" : "JSON file with all of the display data and information.",
						"option_type" : "string",
						"default" : "./display/dsi_800x480t.json",
						"hidden" : false
					},
					{
						"option_name" : "input_types_supported",
						"option_friendly_name" : "Input Types Supported", 
						"option_description" : "List of input types supported.  Separate multiple types with a comma.",
						"option_type" : "list",
						"list_values" : [["button"], ["encoder"], ["touch"], ["button", "touch"], ["encoder", "touch"], ["none"]],
						"list_labels" : ["Button", "Encoder", "Touch", "Touch + Button", "Touch + Encoder", "No Input"],
						"default" : ["button", "touch"],
						"hidden" : false
					}
				]
			},
			"protoflex" : {
				"friendly_name" : "Prototype Flex w/Input",
				"filename" : "protoflex",
				"description" : "Prototype (Test) Flex Module for a with various input methods.",
				"notes" : "This module is used for development only and should not be used for production.",
				"default" : false,
				"image" : "protoflex.png",
				"reboot_required" : true,
				"py_dependencies" : ["pillow>=10.0.0", "pygame>=2.5.0"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {},
				"config" : [
					{
						"option_name" : "rotation",
						"option_friendly_name" : "Screen Rotation", 
						"option_description" : "Select the display rotation angle (Usually 0 degrees).",
						"option_type" : "list",
						"list_values" : [0, 90, 180, 270],
						"list_labels" : ["0 Degrees", "90 Degrees", "180 Degrees", "270 Degrees"],
						"default" : 0,
						"hidden" : false
					},
					{
						"option_name" : "display_data_filename",
						"option_friendly_name" : "Display Data Filename", 
						"option_description" : "Choose the screen resolution desired to select the corresponding JSON configuration file.",
						"option_type" : "list",
						"list_values" : ["./display/protoflex_320x240.json", "./display/protoflex_800x480.json"],
						"list_labels" : ["320x240", "800x480"],
						"default" : "./display/protoflex_320x240.json",
						"hidden" : false
					},
					{
						"option_name" : "input_types_supported",
						"option_friendly_name" : "Input Types Supported", 
						"option_description" : "List of input types supported.  Separate multiple types with a comma.",
						"option_type" : "list",
						"list_values" : [["button"], ["encoder"], ["touch"], ["button", "encoder", "touch"], ["none"]],
						"list_labels" : ["Button", "Encoder", "Touch", "Button/Encoder/Touch", "No Input"],
						"default" : ["button", "encoder", "touch"],
						"hidden" : false
					}
				]
			}

		}, 
		"distance" : {
			"hcsr04" : {
				"friendly_name" : "HCSR04 Ultrasonic Distance Sensor",
				"filename" : "hcsr04",
				"description" : "This economical sensor provides 2cm to 400cm of non-contact measurement functionality with a ranging accuracy that can reach up to 3mm.",
				"default" : false,
				"image" : "hcsr04.png",
				"reboot_required" : false,
				"py_dependencies" : ["hcsr04sensor"], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {}
			},
			"vl53l0x" : {
				"friendly_name" : "VL53L0X Time of Flight Distance Sensor",
				"filename" : "vl53l0x",
				"description" : "The VL53L0X is a new generation Time-of-Flight (ToF) laser-ranging module and is the hopper sensor of choice for the PiFire project.",
				"default" : false,
				"image" : "vl53l0x.png",
				"reboot_required" : false,
				"py_dependencies" : ["git+https://github.com/pimoroni/VL53L0X-python.git"], 
				"apt_dependencies" : ["python3-smbus"],
				"command_list" : [],
				"settings_dependencies" : {}
			},
			"prototype" : {
				"friendly_name" : "Prototype / Test",
				"filename" : "prototype",
				"description" : "This module should be chosen for testing & debug.",
				"default" : false,
				"image" : "prototype.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {}			
			},
			"none" : {
				"friendly_name" : "None",
				"filename" : "none",
				"description" : "This module should be chosen if there is no distance sensor hardware installed.",
				"default" : true,
				"image" : "none.png",
				"reboot_required" : false,
				"py_dependencies" : [], 
				"apt_dependencies" : [],
				"command_list" : [],
				"settings_dependencies" : {}			
			}
		}
	}, 
	"probe_config_options" : {
		"name" : {
			"display_name" : "Probe Name",
			"options" : {},
			"description" : "This name will be displayed throughout the PiFire UI for this probe.  It should be unique to this probe and not match other probe names."
		}, 
		"device_port" : {
			"display_name" : "Device & Port",
			"options" : {},
			"description" : "The device name and port where the temperature readings will be read from."
		}, 
		"type" : {
			"display_name" : "Probe Type",
			"options" : {"Food": "Food Probe", "Primary": "Primary Probe", "Aux": "Auxillary Probe"},
			"description" : "Probe types are as follows: <i><br><strong>Food</strong> - Used as a food probe to track the temperature of food items.  This probe will be displayed in the UI and tracked in history. <br><strong>Primary</strong> - Used as the primary probe to control the grill/smoker in hold mode, etc.  There must be one Primary probe, and only one.  This probe is displayed in the UI and tracked in the history.  <br><strong>Aux</strong> - Auxillary temperature input, not displayed in the UI, but tracked in the history. Used by virtual probes or for reference in tuning.</i>"
		}, 
		"profile_id" : {
			"display_name" : "Probe Profile",
			"options" : {},
			"description" : "The probe profile that will be applied to this probe (if applicable for the device)."
		}, 
		"enabled" : {
			"display_name" : "Enabled",
			"options" : {"true": "Yes", "false": "No"},
			"description" : "Probe is enabled and visible in the UI."
		}
	},
	"boards" : {
		"pcb_2.00a" : {
			"name" : "PiFire v2.00a",  
			"id" : "pcb_2.00a",
			"description" : "Original PiFire PCB design with three usable probes exposed.",
			"probe_map": {
				"probe_devices": [
				  {
					"config": {
						"ADC0_rd": "10000",
						"ADC1_rd": "10000",
						"ADC2_rd": "10000",
						"ADC3_rd": "10000",
						"i2c_bus_addr": "0x48",
						"voltage_ref": "3.28"
					},
					"device": "ADS1115",
					"module": "ads1115_adafruit",
					"ports": [
					  "ADC0",
					  "ADC1",
					  "ADC2",
					  "ADC3"
					]
				  }
				],
				"probe_info": [
				  {
					"name": "Grill",
					"type": "Primary",
					"enabled": true,
					"label": "Grill",
					"device": "ADS1115",
					"port": "ADC0",
					"profile": {
					  "A": 0.04136906456,
					  "B": -0.00677987613,
					  "C": 2.760294589e-05,
					  "id": "99b8f02d-233d-11ee-a7a2-e5396c02c5fd",
					  "name": "PT-1000-Ideal"
					}
				  },
				  {
					"name": "Probe-1",
					"type": "Food",
					"enabled": true,
					"label": "Probe1",
					"device": "ADS1115",
					"port": "ADC1",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-2",
					"type": "Food",
					"enabled": true,
					"label": "Probe2",
					"device": "ADS1115",
					"port": "ADC2",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  }
				]
			}
		},
		"pcb_3.01a" : {
			"name" : "PiFire v3.01a",  
			"id" : "pcb_3.01a",
			"description" : "PiFire PCB variant designed by James Weber with all four probes exposed and a button header.",
			"probe_map": {
				"probe_devices": [
				  {
					"config": {
						"ADC0_rd": "10000",
						"ADC1_rd": "10000",
						"ADC2_rd": "10000",
						"ADC3_rd": "10000",
						"i2c_bus_addr": "0x48",
						"voltage_ref": "3.28"
					},
					"device": "ADS1115",
					"module": "ads1115_adafruit",
					"ports": [
					  "ADC0",
					  "ADC1",
					  "ADC2",
					  "ADC3"
					]
				  }
				],
				"probe_info": [
				  {
					"name": "Grill",
					"type": "Primary",
					"enabled": true,
					"label": "Grill",
					"device": "ADS1115",
					"port": "ADC0",
					"profile": {
					  "A": 0.04136906456,
					  "B": -0.00677987613,
					  "C": 2.760294589e-05,
					  "id": "99b8f02d-233d-11ee-a7a2-e5396c02c5fd",
					  "name": "PT-1000-Ideal"
					}
				  },
				  {
					"name": "Probe-1",
					"type": "Food",
					"enabled": true,
					"label": "Probe1",
					"device": "ADS1115",
					"port": "ADC1",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-2",
					"type": "Food",
					"enabled": true,
					"label": "Probe2",
					"device": "ADS1115",
					"port": "ADC2",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-3",
					"type": "Food",
					"enabled": true,
					"label": "Probe3",
					"device": "ADS1115",
					"port": "ADC3",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  }
				]
			}
		},
		"pcb_pwm" : {
			"name" : "PiFire PWM",  
			"id" : "pcb_pwm",
			"description" : "PiFire PWM board designed by James Weber with ADS1115 default.",
			"probe_map": {
				"probe_devices": [
				  {
					"config": {
						"ADC0_rd": "10000",
						"ADC1_rd": "10000",
						"ADC2_rd": "10000",
						"ADC3_rd": "10000",
						"i2c_bus_addr": "0x48",
						"voltage_ref": "3.28"
					},
					"device": "ADS1115",
					"module": "ads1115_adafruit",
					"ports": [
					  "ADC0",
					  "ADC1",
					  "ADC2",
					  "ADC3"
					]
				  }
				],
				"probe_info": [
				  {
					"name": "Grill",
					"type": "Primary",
					"enabled": true,
					"label": "Grill",
					"device": "ADS1115",
					"port": "ADC0",
					"profile": {
					  "A": 0.04136906456,
					  "B": -0.00677987613,
					  "C": 2.760294589e-05,
					  "id": "99b8f02d-233d-11ee-a7a2-e5396c02c5fd",
					  "name": "PT-1000-Ideal"
					}
				  },
				  {
					"name": "Probe-1",
					"type": "Food",
					"enabled": true,
					"label": "Probe1",
					"device": "ADS1115",
					"port": "ADC1",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-2",
					"type": "Food",
					"enabled": true,
					"label": "Probe2",
					"device": "ADS1115",
					"port": "ADC2",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-3",
					"type": "Food",
					"enabled": true,
					"label": "Probe3",
					"device": "ADS1115",
					"port": "ADC3",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  }
				]
			}
		},
		"pcb_4.x.x" : {
			"name" : "PiFire v4.x.x",  
			"id" : "pcb_4.x.x",
			"description" : "PiFire PCB v4.x.x with module design allowing for multiple types of probe devices to be attached.",
			"probe_map": {
				"probe_devices": [
				  {
					"config": {
						"ADC0_rd": "10000",
						"ADC1_rd": "10000",
						"ADC2_rd": "10000",
						"ADC3_rd": "10000",
						"i2c_bus_addr": "0x48",
						"voltage_ref": "3.28"
					},
					"device": "ADS1115",
					"module": "ads1115_adafruit",
					"ports": [
					  "ADC0",
					  "ADC1",
					  "ADC2",
					  "ADC3"
					]
				  }
				],
				"probe_info": [
				  {
					"name": "Grill",
					"type": "Primary",
					"enabled": true,
					"label": "Grill",
					"device": "ADS1115",
					"port": "ADC0",
					"profile": {
					  "A": 0.04136906456,
					  "B": -0.00677987613,
					  "C": 2.760294589e-05,
					  "id": "99b8f02d-233d-11ee-a7a2-e5396c02c5fd",
					  "name": "PT-1000-Ideal"
					}
				  },
				  {
					"name": "Probe-1",
					"type": "Food",
					"enabled": true,
					"label": "Probe1",
					"device": "ADS1115",
					"port": "ADC1",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-2",
					"type": "Food",
					"enabled": true,
					"label": "Probe2",
					"device": "ADS1115",
					"port": "ADC2",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  },
				  {
					"name": "Probe-3",
					"type": "Food",
					"enabled": true,
					"label": "Probe3",
					"device": "ADS1115",
					"port": "ADC3",
					"profile": {
					  "A": 0.00073431401,
					  "B": 0.0002157437,
					  "C": 9.515686e-08,
					  "id": "TWPS00",
					  "name": "Thermoworks-Pro-Series-HeaterMeter"
					}
				  }
				]
			}
		}
	}
}
